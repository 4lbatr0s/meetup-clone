function cov_czy0rmnd7(){var path="/home/serhat/JavaScript/meetup-clone/models/person.js";var hash="b391da62381a4645718e875da4b4477ca2a84a4e";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/serhat/JavaScript/meetup-clone/models/person.js",statementMap:{"0":{start:{line:1,column:17},end:{line:1,column:36}},"1":{start:{line:3,column:21},end:{line:26,column:2}},"2":{start:{line:30,column:0},end:{line:30,column:54}},"3":{start:{line:32,column:20},end:{line:32,column:58}},"4":{start:{line:34,column:0},end:{line:34,column:29}}},fnMap:{},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0},f:{},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"b391da62381a4645718e875da4b4477ca2a84a4e"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_czy0rmnd7=function(){return actualCoverage;};}return actualCoverage;}cov_czy0rmnd7();const mongoose=(cov_czy0rmnd7().s[0]++,require("mongoose"));const PersonSchema=(cov_czy0rmnd7().s[1]++,new mongoose.Schema({name:{//TODO: these are all called VALIDATON.
type:String,required:true,minlength:3},age:{type:Number,default:18//required:true,
//min:18  //if we open these two lines, that means we cant create an age smaller than 18
},//TODO: meetups array is an object of meetup objects.
meetups:[{type:mongoose.SchemaTypes.ObjectId,ref:"Meetup",//TODO: this Meetup is the meetup we export in meetup.js file.
autopopulate:{maxDepth:1}}]//we dont need to include id, because mongodb will create unique id for every model instance.
}));//Auto-populate
cov_czy0rmnd7().s[2]++;PersonSchema.plugin(require("mongoose-autopopulate"));const PersonModel=(cov_czy0rmnd7().s[3]++,mongoose.model("Person",PersonSchema));cov_czy0rmnd7().s[4]++;module.exports=PersonModel;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJQZXJzb25TY2hlbWEiLCJTY2hlbWEiLCJuYW1lIiwidHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwibWlubGVuZ3RoIiwiYWdlIiwiTnVtYmVyIiwiZGVmYXVsdCIsIm1lZXR1cHMiLCJTY2hlbWFUeXBlcyIsIk9iamVjdElkIiwicmVmIiwiYXV0b3BvcHVsYXRlIiwibWF4RGVwdGgiLCJwbHVnaW4iLCJQZXJzb25Nb2RlbCIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbInBlcnNvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb25nb29zZSA9IHJlcXVpcmUoXCJtb25nb29zZVwiKTtcblxuY29uc3QgUGVyc29uU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XG4gIG5hbWU6IHtcbiAgICAvL1RPRE86IHRoZXNlIGFyZSBhbGwgY2FsbGVkIFZBTElEQVRPTi5cbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgbWlubGVuZ3RoOiAzLFxuICB9LFxuICBhZ2U6IHtcbiAgICB0eXBlOiBOdW1iZXIsXG4gICAgZGVmYXVsdDogMTgsXG4gICAgLy9yZXF1aXJlZDp0cnVlLFxuICAgIC8vbWluOjE4ICAvL2lmIHdlIG9wZW4gdGhlc2UgdHdvIGxpbmVzLCB0aGF0IG1lYW5zIHdlIGNhbnQgY3JlYXRlIGFuIGFnZSBzbWFsbGVyIHRoYW4gMThcbiAgfSwgLy9UT0RPOiBtZWV0dXBzIGFycmF5IGlzIGFuIG9iamVjdCBvZiBtZWV0dXAgb2JqZWN0cy5cbiAgbWVldHVwczogW1xuICAgIHtcbiAgICAgIHR5cGU6IG1vbmdvb3NlLlNjaGVtYVR5cGVzLk9iamVjdElkLFxuICAgICAgcmVmOiBcIk1lZXR1cFwiLCAvL1RPRE86IHRoaXMgTWVldHVwIGlzIHRoZSBtZWV0dXAgd2UgZXhwb3J0IGluIG1lZXR1cC5qcyBmaWxlLlxuICAgICAgYXV0b3BvcHVsYXRlOiB7XG4gICAgICAgIG1heERlcHRoOiAxLFxuICAgICAgfSxcbiAgICB9LFxuICBdLFxuICAvL3dlIGRvbnQgbmVlZCB0byBpbmNsdWRlIGlkLCBiZWNhdXNlIG1vbmdvZGIgd2lsbCBjcmVhdGUgdW5pcXVlIGlkIGZvciBldmVyeSBtb2RlbCBpbnN0YW5jZS5cbn0pO1xuXG5cbi8vQXV0by1wb3B1bGF0ZVxuUGVyc29uU2NoZW1hLnBsdWdpbihyZXF1aXJlKFwibW9uZ29vc2UtYXV0b3BvcHVsYXRlXCIpKTtcblxuY29uc3QgUGVyc29uTW9kZWwgPSBtb25nb29zZS5tb2RlbChcIlBlcnNvblwiLCBQZXJzb25TY2hlbWEpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFBlcnNvbk1vZGVsO1xuIl0sIm1hcHBpbmdzIjoidTRCQWVZO3lGQWZaLEtBQU1BLENBQUFBLFFBQVEseUJBQUdDLE9BQU8sQ0FBQyxVQUFELENBQVYsQ0FBZCxDQUVBLEtBQU1DLENBQUFBLFlBQVkseUJBQUcsR0FBSUYsQ0FBQUEsUUFBUSxDQUFDRyxNQUFiLENBQW9CLENBQ3ZDQyxJQUFJLENBQUUsQ0FDSjtBQUNBQyxJQUFJLENBQUVDLE1BRkYsQ0FHSkMsUUFBUSxDQUFFLElBSE4sQ0FJSkMsU0FBUyxDQUFFLENBSlAsQ0FEaUMsQ0FPdkNDLEdBQUcsQ0FBRSxDQUNISixJQUFJLENBQUVLLE1BREgsQ0FFSEMsT0FBTyxDQUFFLEVBQ1Q7QUFDQTtBQUpHLENBUGtDLENBWXBDO0FBQ0hDLE9BQU8sQ0FBRSxDQUNQLENBQ0VQLElBQUksQ0FBRUwsUUFBUSxDQUFDYSxXQUFULENBQXFCQyxRQUQ3QixDQUVFQyxHQUFHLENBQUUsUUFGUCxDQUVpQjtBQUNmQyxZQUFZLENBQUUsQ0FDWkMsUUFBUSxDQUFFLENBREUsQ0FIaEIsQ0FETyxDQVNUO0FBdEJ1QyxDQUFwQixDQUFILENBQWxCLENBMEJBO3VCQUNBZixZQUFZLENBQUNnQixNQUFiLENBQW9CakIsT0FBTyxDQUFDLHVCQUFELENBQTNCLEVBRUEsS0FBTWtCLENBQUFBLFdBQVcseUJBQUduQixRQUFRLENBQUNvQixLQUFULENBQWUsUUFBZixDQUF5QmxCLFlBQXpCLENBQUgsQ0FBakIsQyx1QkFFQW1CLE1BQU0sQ0FBQ0MsT0FBUCxDQUFpQkgsV0FBakIifQ==