function cov_rdbd0b4xn(){var path="/home/serhat/JavaScript/meetup-clone/services/person-service.js";var hash="3a250db3fbcf9087c9512b99b9d3ce42a03dc126";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/serhat/JavaScript/meetup-clone/services/person-service.js",statementMap:{"0":{start:{line:1,column:20},end:{line:1,column:45}},"1":{start:{line:2,column:20},end:{line:2,column:47}},"2":{start:{line:8,column:10},end:{line:8,column:21}},"3":{start:{line:26,column:4},end:{line:30,column:6}},"4":{start:{line:34,column:0},end:{line:34,column:37}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:25,column:2},end:{line:25,column:3}},loc:{start:{line:25,column:27},end:{line:31,column:3}},line:25}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0},f:{"0":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"3a250db3fbcf9087c9512b99b9d3ce42a03dc126"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_rdbd0b4xn=function(){return actualCoverage;};}return actualCoverage;}cov_rdbd0b4xn();const BaseService=(cov_rdbd0b4xn().s[0]++,require("./base-service"));const PersonModel=(cov_rdbd0b4xn().s[1]++,require("../models/person"));class PersonService extends BaseService{// constructor() {
//     super(PersonModel)
// }
model=(cov_rdbd0b4xn().s[2]++,PersonModel);//TODO:create methods in mongodb.
//it cant be =>, should be function()
//this function is here and not in person model because models should not depend on each other, services should.
// async attendMeetup(person, meetup) {
//   person.meetups.push(meetup); //this is not the regular push function, mongodb changed the push function, you pass whole object, if there is an array in that object, it only pushes the array.
//   meetup.attendes.push(person);
//   await person.save();
//   await meetup.save();
// }
// async savePersonModel() {
//   await this.model.save();
// }
async findPeersOver18(cb){cov_rdbd0b4xn().f[0]++;cov_rdbd0b4xn().s[3]++;return this.model.find({age:{$gte:18//greater and equals to 18.
}});}}cov_rdbd0b4xn().s[4]++;module.exports=new PersonService();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCYXNlU2VydmljZSIsInJlcXVpcmUiLCJQZXJzb25Nb2RlbCIsIlBlcnNvblNlcnZpY2UiLCJtb2RlbCIsImZpbmRQZWVyc092ZXIxOCIsImNiIiwiZmluZCIsImFnZSIsIiRndGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsicGVyc29uLXNlcnZpY2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQmFzZVNlcnZpY2UgPSByZXF1aXJlKFwiLi9iYXNlLXNlcnZpY2VcIik7XG5jb25zdCBQZXJzb25Nb2RlbCA9IHJlcXVpcmUoXCIuLi9tb2RlbHMvcGVyc29uXCIpO1xuXG5jbGFzcyBQZXJzb25TZXJ2aWNlIGV4dGVuZHMgQmFzZVNlcnZpY2Uge1xuICAvLyBjb25zdHJ1Y3RvcigpIHtcbiAgLy8gICAgIHN1cGVyKFBlcnNvbk1vZGVsKVxuICAvLyB9XG4gIG1vZGVsID0gUGVyc29uTW9kZWw7XG5cbiAgLy9UT0RPOmNyZWF0ZSBtZXRob2RzIGluIG1vbmdvZGIuXG4gIC8vaXQgY2FudCBiZSA9Piwgc2hvdWxkIGJlIGZ1bmN0aW9uKClcbiAgLy90aGlzIGZ1bmN0aW9uIGlzIGhlcmUgYW5kIG5vdCBpbiBwZXJzb24gbW9kZWwgYmVjYXVzZSBtb2RlbHMgc2hvdWxkIG5vdCBkZXBlbmQgb24gZWFjaCBvdGhlciwgc2VydmljZXMgc2hvdWxkLlxuICAvLyBhc3luYyBhdHRlbmRNZWV0dXAocGVyc29uLCBtZWV0dXApIHtcbiAgLy8gICBwZXJzb24ubWVldHVwcy5wdXNoKG1lZXR1cCk7IC8vdGhpcyBpcyBub3QgdGhlIHJlZ3VsYXIgcHVzaCBmdW5jdGlvbiwgbW9uZ29kYiBjaGFuZ2VkIHRoZSBwdXNoIGZ1bmN0aW9uLCB5b3UgcGFzcyB3aG9sZSBvYmplY3QsIGlmIHRoZXJlIGlzIGFuIGFycmF5IGluIHRoYXQgb2JqZWN0LCBpdCBvbmx5IHB1c2hlcyB0aGUgYXJyYXkuXG4gIC8vICAgbWVldHVwLmF0dGVuZGVzLnB1c2gocGVyc29uKTtcbiAgLy8gICBhd2FpdCBwZXJzb24uc2F2ZSgpO1xuICAvLyAgIGF3YWl0IG1lZXR1cC5zYXZlKCk7XG4gIC8vIH1cblxuICAvLyBhc3luYyBzYXZlUGVyc29uTW9kZWwoKSB7XG4gIC8vICAgYXdhaXQgdGhpcy5tb2RlbC5zYXZlKCk7XG4gIC8vIH1cblxuXG4gIGFzeW5jIGZpbmRQZWVyc092ZXIxOChjYil7XG4gICAgcmV0dXJuIHRoaXMubW9kZWwuZmluZCh7XG4gICAgICBhZ2U6e1xuICAgICAgICAkZ3RlOjE4IC8vZ3JlYXRlciBhbmQgZXF1YWxzIHRvIDE4LlxuICAgICAgfVxuICAgIH0pXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBuZXcgUGVyc29uU2VydmljZSgpO1xuIl0sIm1hcHBpbmdzIjoiNmlDQWVZO3lGQWZaLEtBQU1BLENBQUFBLFdBQVcseUJBQUdDLE9BQU8sQ0FBQyxnQkFBRCxDQUFWLENBQWpCLENBQ0EsS0FBTUMsQ0FBQUEsV0FBVyx5QkFBR0QsT0FBTyxDQUFDLGtCQUFELENBQVYsQ0FBakIsQ0FFQSxLQUFNRSxDQUFBQSxhQUFOLFFBQTRCSCxDQUFBQSxXQUFZLENBQ3RDO0FBQ0E7QUFDQTtBQUNBSSxLQUFLLHlCQUFHRixXQUFILEVBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBR3FCLEtBQWZHLENBQUFBLGVBQWUsQ0FBQ0MsRUFBRCxDQUFJLCtDQUN2QixNQUFPLE1BQUtGLEtBQUwsQ0FBV0csSUFBWCxDQUFnQixDQUNyQkMsR0FBRyxDQUFDLENBQ0ZDLElBQUksQ0FBQyxFQUFHO0FBRE4sQ0FEaUIsQ0FBaEIsQ0FBUCxDQUtELENBM0JxQyxDLHVCQThCeENDLE1BQU0sQ0FBQ0MsT0FBUCxDQUFpQixHQUFJUixDQUFBQSxhQUFKLEVBQWpCIn0=