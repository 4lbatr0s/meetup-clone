function cov_1fmjjmu5sw(){var path="/home/serhat/JavaScript/meetup-clone/models/meetup.js";var hash="45309b5c2ef89f240317970860c2da6c4a424113";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/serhat/JavaScript/meetup-clone/models/meetup.js",statementMap:{"0":{start:{line:3,column:17},end:{line:3,column:36}},"1":{start:{line:5,column:21},end:{line:26,column:2}},"2":{start:{line:29,column:0},end:{line:29,column:54}},"3":{start:{line:31,column:20},end:{line:31,column:58}},"4":{start:{line:33,column:0},end:{line:33,column:29}}},fnMap:{},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0},f:{},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"45309b5c2ef89f240317970860c2da6c4a424113"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1fmjjmu5sw=function(){return actualCoverage;};}return actualCoverage;}cov_1fmjjmu5sw();const mongoose=(cov_1fmjjmu5sw().s[0]++,require("mongoose"));const MeetupSchema=(cov_1fmjjmu5sw().s[1]++,new mongoose.Schema({name:{type:String,required:true,minlength:3},location:{type:String,default:""},attendees:[{type:mongoose.SchemaTypes.ObjectId,ref:"Person",autopopulate:{//TODO: prevents looping.
maxDepth:1}}]//we dont need to include id, because mongodb will create unique id for every model instance.
}));//Auto-populate
cov_1fmjjmu5sw().s[2]++;MeetupSchema.plugin(require("mongoose-autopopulate"));const MeetupModel=(cov_1fmjjmu5sw().s[3]++,mongoose.model("Meetup",MeetupSchema));cov_1fmjjmu5sw().s[4]++;module.exports=MeetupModel;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJNZWV0dXBTY2hlbWEiLCJTY2hlbWEiLCJuYW1lIiwidHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwibWlubGVuZ3RoIiwibG9jYXRpb24iLCJkZWZhdWx0IiwiYXR0ZW5kZWVzIiwiU2NoZW1hVHlwZXMiLCJPYmplY3RJZCIsInJlZiIsImF1dG9wb3B1bGF0ZSIsIm1heERlcHRoIiwicGx1Z2luIiwiTWVldHVwTW9kZWwiLCJtb2RlbCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJtZWV0dXAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXG5cbmNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZShcIm1vbmdvb3NlXCIpO1xuXG5jb25zdCBNZWV0dXBTY2hlbWEgPSBuZXcgbW9uZ29vc2UuU2NoZW1hKHtcbiAgbmFtZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICBtaW5sZW5ndGg6IDMsXG4gIH0sXG4gIGxvY2F0aW9uOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIGRlZmF1bHQ6IFwiXCIsXG4gIH0sXG4gIGF0dGVuZGVlczogW1xuICAgIHtcbiAgICAgIHR5cGU6IG1vbmdvb3NlLlNjaGVtYVR5cGVzLk9iamVjdElkLFxuICAgICAgcmVmOiBcIlBlcnNvblwiLFxuICAgICAgYXV0b3BvcHVsYXRlOiB7XG4gICAgICAgIC8vVE9ETzogcHJldmVudHMgbG9vcGluZy5cbiAgICAgICAgbWF4RGVwdGg6IDEsXG4gICAgICB9LFxuICAgIH0sXG4gIF0sXG4gIC8vd2UgZG9udCBuZWVkIHRvIGluY2x1ZGUgaWQsIGJlY2F1c2UgbW9uZ29kYiB3aWxsIGNyZWF0ZSB1bmlxdWUgaWQgZm9yIGV2ZXJ5IG1vZGVsIGluc3RhbmNlLlxufSk7XG5cbi8vQXV0by1wb3B1bGF0ZVxuTWVldHVwU2NoZW1hLnBsdWdpbihyZXF1aXJlKFwibW9uZ29vc2UtYXV0b3BvcHVsYXRlXCIpKTtcblxuY29uc3QgTWVldHVwTW9kZWwgPSBtb25nb29zZS5tb2RlbChcIk1lZXR1cFwiLCBNZWV0dXBTY2hlbWEpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE1lZXR1cE1vZGVsO1xuIl0sIm1hcHBpbmdzIjoidzRCQWVZOzJGQWJaLEtBQU1BLENBQUFBLFFBQVEsMEJBQUdDLE9BQU8sQ0FBQyxVQUFELENBQVYsQ0FBZCxDQUVBLEtBQU1DLENBQUFBLFlBQVksMEJBQUcsR0FBSUYsQ0FBQUEsUUFBUSxDQUFDRyxNQUFiLENBQW9CLENBQ3ZDQyxJQUFJLENBQUUsQ0FDSkMsSUFBSSxDQUFFQyxNQURGLENBRUpDLFFBQVEsQ0FBRSxJQUZOLENBR0pDLFNBQVMsQ0FBRSxDQUhQLENBRGlDLENBTXZDQyxRQUFRLENBQUUsQ0FDUkosSUFBSSxDQUFFQyxNQURFLENBRVJJLE9BQU8sQ0FBRSxFQUZELENBTjZCLENBVXZDQyxTQUFTLENBQUUsQ0FDVCxDQUNFTixJQUFJLENBQUVMLFFBQVEsQ0FBQ1ksV0FBVCxDQUFxQkMsUUFEN0IsQ0FFRUMsR0FBRyxDQUFFLFFBRlAsQ0FHRUMsWUFBWSxDQUFFLENBQ1o7QUFDQUMsUUFBUSxDQUFFLENBRkUsQ0FIaEIsQ0FEUyxDQVVYO0FBcEJ1QyxDQUFwQixDQUFILENBQWxCLENBdUJBO3dCQUNBZCxZQUFZLENBQUNlLE1BQWIsQ0FBb0JoQixPQUFPLENBQUMsdUJBQUQsQ0FBM0IsRUFFQSxLQUFNaUIsQ0FBQUEsV0FBVywwQkFBR2xCLFFBQVEsQ0FBQ21CLEtBQVQsQ0FBZSxRQUFmLENBQXlCakIsWUFBekIsQ0FBSCxDQUFqQixDLHdCQUVBa0IsTUFBTSxDQUFDQyxPQUFQLENBQWlCSCxXQUFqQiJ9