function cov_czy0rmnd7(){var path="/home/serhat/JavaScript/meetup-clone/models/person.js";var hash="a8f778321c030da312641970a710c7ee6fa84d60";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/serhat/JavaScript/meetup-clone/models/person.js",statementMap:{"0":{start:{line:3,column:17},end:{line:3,column:36}},"1":{start:{line:5,column:21},end:{line:28,column:2}},"2":{start:{line:32,column:0},end:{line:32,column:54}},"3":{start:{line:34,column:20},end:{line:34,column:58}},"4":{start:{line:36,column:0},end:{line:36,column:29}}},fnMap:{},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0},f:{},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"a8f778321c030da312641970a710c7ee6fa84d60"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_czy0rmnd7=function(){return actualCoverage;};}return actualCoverage;}cov_czy0rmnd7();const mongoose=(cov_czy0rmnd7().s[0]++,require("mongoose"));const PersonSchema=(cov_czy0rmnd7().s[1]++,new mongoose.Schema({name:{//TODO: these are all called VALIDATON.
type:String,required:true,minlength:3},age:{type:Number,default:18//required:true,
//min:18  //if we open these two lines, that means we cant create an age smaller than 18
},//TODO: meetups array is an object of meetup objects.
meetups:[{type:mongoose.SchemaTypes.ObjectId,ref:"Meetup",//TODO: this Meetup is the meetup we export in meetup.js file.
autopopulate:{maxDepth:1}}]//we dont need to include id, because mongodb will create unique id for every model instance.
}));//Auto-populate
cov_czy0rmnd7().s[2]++;PersonSchema.plugin(require("mongoose-autopopulate"));const PersonModel=(cov_czy0rmnd7().s[3]++,mongoose.model("Person",PersonSchema));cov_czy0rmnd7().s[4]++;module.exports=PersonModel;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJQZXJzb25TY2hlbWEiLCJTY2hlbWEiLCJuYW1lIiwidHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwibWlubGVuZ3RoIiwiYWdlIiwiTnVtYmVyIiwiZGVmYXVsdCIsIm1lZXR1cHMiLCJTY2hlbWFUeXBlcyIsIk9iamVjdElkIiwicmVmIiwiYXV0b3BvcHVsYXRlIiwibWF4RGVwdGgiLCJwbHVnaW4iLCJQZXJzb25Nb2RlbCIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbInBlcnNvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcblxuY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKFwibW9uZ29vc2VcIik7XG5cbmNvbnN0IFBlcnNvblNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xuICBuYW1lOiB7XG4gICAgLy9UT0RPOiB0aGVzZSBhcmUgYWxsIGNhbGxlZCBWQUxJREFUT04uXG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgIG1pbmxlbmd0aDogMyxcbiAgfSxcbiAgYWdlOiB7XG4gICAgdHlwZTogTnVtYmVyLFxuICAgIGRlZmF1bHQ6IDE4LFxuICAgIC8vcmVxdWlyZWQ6dHJ1ZSxcbiAgICAvL21pbjoxOCAgLy9pZiB3ZSBvcGVuIHRoZXNlIHR3byBsaW5lcywgdGhhdCBtZWFucyB3ZSBjYW50IGNyZWF0ZSBhbiBhZ2Ugc21hbGxlciB0aGFuIDE4XG4gIH0sIC8vVE9ETzogbWVldHVwcyBhcnJheSBpcyBhbiBvYmplY3Qgb2YgbWVldHVwIG9iamVjdHMuXG4gIG1lZXR1cHM6IFtcbiAgICB7XG4gICAgICB0eXBlOiBtb25nb29zZS5TY2hlbWFUeXBlcy5PYmplY3RJZCxcbiAgICAgIHJlZjogXCJNZWV0dXBcIiwgLy9UT0RPOiB0aGlzIE1lZXR1cCBpcyB0aGUgbWVldHVwIHdlIGV4cG9ydCBpbiBtZWV0dXAuanMgZmlsZS5cbiAgICAgIGF1dG9wb3B1bGF0ZToge1xuICAgICAgICBtYXhEZXB0aDogMSxcbiAgICAgIH0sXG4gICAgfSxcbiAgXSxcbiAgLy93ZSBkb250IG5lZWQgdG8gaW5jbHVkZSBpZCwgYmVjYXVzZSBtb25nb2RiIHdpbGwgY3JlYXRlIHVuaXF1ZSBpZCBmb3IgZXZlcnkgbW9kZWwgaW5zdGFuY2UuXG59KTtcblxuXG4vL0F1dG8tcG9wdWxhdGVcblBlcnNvblNjaGVtYS5wbHVnaW4ocmVxdWlyZShcIm1vbmdvb3NlLWF1dG9wb3B1bGF0ZVwiKSk7XG5cbmNvbnN0IFBlcnNvbk1vZGVsID0gbW9uZ29vc2UubW9kZWwoXCJQZXJzb25cIiwgUGVyc29uU2NoZW1hKTtcblxubW9kdWxlLmV4cG9ydHMgPSBQZXJzb25Nb2RlbDtcbiJdLCJtYXBwaW5ncyI6InU0QkFlWTt5RkFiWixLQUFNQSxDQUFBQSxRQUFRLHlCQUFHQyxPQUFPLENBQUMsVUFBRCxDQUFWLENBQWQsQ0FFQSxLQUFNQyxDQUFBQSxZQUFZLHlCQUFHLEdBQUlGLENBQUFBLFFBQVEsQ0FBQ0csTUFBYixDQUFvQixDQUN2Q0MsSUFBSSxDQUFFLENBQ0o7QUFDQUMsSUFBSSxDQUFFQyxNQUZGLENBR0pDLFFBQVEsQ0FBRSxJQUhOLENBSUpDLFNBQVMsQ0FBRSxDQUpQLENBRGlDLENBT3ZDQyxHQUFHLENBQUUsQ0FDSEosSUFBSSxDQUFFSyxNQURILENBRUhDLE9BQU8sQ0FBRSxFQUNUO0FBQ0E7QUFKRyxDQVBrQyxDQVlwQztBQUNIQyxPQUFPLENBQUUsQ0FDUCxDQUNFUCxJQUFJLENBQUVMLFFBQVEsQ0FBQ2EsV0FBVCxDQUFxQkMsUUFEN0IsQ0FFRUMsR0FBRyxDQUFFLFFBRlAsQ0FFaUI7QUFDZkMsWUFBWSxDQUFFLENBQ1pDLFFBQVEsQ0FBRSxDQURFLENBSGhCLENBRE8sQ0FTVDtBQXRCdUMsQ0FBcEIsQ0FBSCxDQUFsQixDQTBCQTt1QkFDQWYsWUFBWSxDQUFDZ0IsTUFBYixDQUFvQmpCLE9BQU8sQ0FBQyx1QkFBRCxDQUEzQixFQUVBLEtBQU1rQixDQUFBQSxXQUFXLHlCQUFHbkIsUUFBUSxDQUFDb0IsS0FBVCxDQUFlLFFBQWYsQ0FBeUJsQixZQUF6QixDQUFILENBQWpCLEMsdUJBRUFtQixNQUFNLENBQUNDLE9BQVAsQ0FBaUJILFdBQWpCIn0=